{"ast":null,"code":"import _classCallCheck from \"D:\\\\antdtest\\\\57-\\u5927\\u5C4F\\\\road\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\antdtest\\\\57-\\u5927\\u5C4F\\\\road\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\antdtest\\\\57-\\u5927\\u5C4F\\\\road\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\antdtest\\\\57-\\u5927\\u5C4F\\\\road\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\antdtest\\\\57-\\u5927\\u5C4F\\\\road\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\antdtest\\\\57-\\u5927\\u5C4F\\\\road\\\\src\\\\trafficLine.js\";\n// data-set 可以按需引入，除此之外不要引入别的包\nimport React from 'react';\nimport { Chart, Axis, Tooltip, Geom, Legend, G2 } from 'bizcharts';\nimport DataSet from '@antv/data-set'; // 下面的代码会被作为 cdn script 注入 注释勿删\n// CDN START\n\nvar data = [{\n  label: '2013',\n  乡镇公路养护: 40538,\n  公路通车: 99535,\n  养护同比: (40986 - 40538) / 40538\n}, {\n  label: '2014',\n  乡镇公路养护: 40986,\n  公路通车: 101190,\n  养护同比: (40986 - 40538) / 40538\n}, {\n  label: '2015',\n  乡镇公路养护: 41167,\n  公路通车: 104585,\n  养护同比: (41167 - 40986) / 40986\n}, {\n  label: '2016',\n  乡镇公路养护: 41134,\n  公路通车: 106757,\n  养护同比: (41134 - 41167) / 41167\n}, {\n  label: '2017',\n  乡镇公路养护: 41810,\n  公路通车: 108012,\n  养护同比: (41810 - 41134) / 41134\n}];\nvar ds = new DataSet();\nvar dv = ds.createView().source(data);\ndv.transform({\n  type: 'fold',\n  fields: ['乡镇公路养护', '公路通车'],\n  // 展开字段集\n  key: 'type',\n  // key字段\n  value: 'value' // value字段\n\n});\nvar scale = {\n  养护同比: {\n    type: 'linear',\n    min: 0,\n    max: 0.02\n  }\n};\nvar chartIns = null;\n\nvar getG2Instance = function getG2Instance(chart) {\n  chartIns = chart;\n};\n\nvar TrafficLine =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TrafficLine, _React$Component);\n\n  function TrafficLine() {\n    _classCallCheck(this, TrafficLine);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TrafficLine).apply(this, arguments));\n  }\n\n  _createClass(TrafficLine, [{\n    key: \"render\",\n    value: function render() {\n      var grid = {\n        lineStyle: {\n          stroke: 'rgb(67,75,94)',\n          // 网格线的颜色\n          lineWidth: 1,\n          // 网格线的宽度复制代码\n          lineDash: [0, 0]\n        } // 网格线的样式配置，原有属性为 line\n\n      };\n      return React.createElement(Chart, {\n        height: 230,\n        forceFit: true,\n        data: dv,\n        scale: scale,\n        padding: [50, 'auto', 20, 'auto'],\n        onGetG2Instance: getG2Instance,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Legend, {\n        custom: true,\n        position: \"top\",\n        offsetY: -2,\n        items: [{\n          value: '乡镇公路养护',\n          marker: {\n            symbol: 'square',\n            fill: 'rgb(0,191,165)',\n            radius: 5\n          }\n        }, {\n          value: '公路通车',\n          marker: {\n            symbol: 'square',\n            fill: 'rgb(255,97,6)',\n            radius: 5\n          }\n        }],\n        textStyle: {\n          fill: 'white' // 文本的颜色\n\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(Axis, {\n        name: \"label\",\n        label: {\n          // 数值，设置坐标轴文本 label 距离坐标轴线的距离\n          rotate: 0,\n          textStyle: {\n            fill: 'white'\n          } // 坐标轴文本属性配置\n\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(Axis, {\n        name: \"value\",\n        position: 'left',\n        grid: grid,\n        label: {\n          // 数值，设置坐标轴文本 label 距离坐标轴线的距离\n          textStyle: {\n            fill: 'white'\n          } // 坐标轴文本属性配置\n\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(Axis, {\n        name: \"\\u517B\\u62A4\\u540C\\u6BD4\",\n        label: {\n          // 数值，设置坐标轴文本 label 距离坐标轴线的距离\n          textStyle: {\n            fill: 'white'\n          } // 坐标轴文本属性配置\n\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(Tooltip, {\n        \"g2-tooltip\": {\n          opacity: '0.9'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(Geom, {\n        type: \"interval\",\n        position: \"label*value\",\n        color: ['type', function (value) {\n          if (value === '乡镇公路养护') {\n            return 'rgba(0,191,165,0.8)';\n          }\n\n          if (value === '公路通车') {\n            return 'rgba(255,97,6,0.8)';\n          }\n        }],\n        adjust: [{\n          type: 'dodge',\n          marginRatio: 1 / 4\n        }],\n        tooltip: ['type*value', function (type, value) {\n          return {\n            //自定义 tooltip 上显示的 title 显示内容等。\n            name: type,\n            value: \"\".concat(value, \"(\\u516C\\u91CC)\")\n          };\n        }],\n        style: ['type*value', {\n          lineWidth: 2,\n          stroke: function stroke(type, value) {\n            if (value === '乡镇公路养护') {\n              return 'rgba(0,191,165,0.2)';\n            }\n\n            if (value === '公路通车') {\n              return 'rgbargba(9,111,100,0.2)';\n            } // return \"rgba(255,255,255,0.5)\";\n\n          },\n          shadowColor: 'rgba(255,255,255,0.4)',\n          shadowBlur: 10,\n          shadowOffsetX: 0,\n          shadowOffsetY: -2\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return TrafficLine;\n}(React.Component); // CDN END\n\n\nexport default TrafficLine;","map":{"version":3,"sources":["D:\\antdtest\\57-大屏\\road\\src\\trafficLine.js"],"names":["React","Chart","Axis","Tooltip","Geom","Legend","G2","DataSet","data","label","乡镇公路养护","公路通车","养护同比","ds","dv","createView","source","transform","type","fields","key","value","scale","min","max","chartIns","getG2Instance","chart","TrafficLine","grid","lineStyle","stroke","lineWidth","lineDash","marker","symbol","fill","radius","rotate","textStyle","opacity","marginRatio","name","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","Component"],"mappings":"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","sourcesContent":["// data-set 可以按需引入，除此之外不要引入别的包\r\nimport React from 'react';\r\nimport { Chart, Axis, Tooltip, Geom, Legend,G2 } from 'bizcharts';\r\nimport DataSet from '@antv/data-set';\r\n\r\n\r\n// 下面的代码会被作为 cdn script 注入 注释勿删\r\n// CDN START\r\nconst data = [\r\n  { label: '2013', 乡镇公路养护:40538, 公路通车:99535,养护同比:(40986-40538)/40538,},\r\n  { label: '2014', 乡镇公路养护:40986, 公路通车:101190, 养护同比:(40986-40538)/40538,},\r\n  { label: '2015', 乡镇公路养护:41167, 公路通车:104585, 养护同比:(41167-40986)/40986,},\r\n  { label: '2016', 乡镇公路养护:41134, 公路通车:106757, 养护同比:(41134-41167)/41167,},\r\n  { label: '2017', 乡镇公路养护:41810, 公路通车:108012, 养护同比:(41810-41134)/41134,}\r\n];\r\nconst ds = new DataSet();\r\nconst dv = ds.createView().source(data);\r\ndv.transform({\r\n  type: 'fold',\r\n  fields: ['乡镇公路养护', '公路通车'], // 展开字段集\r\n  key: 'type', // key字段\r\n  value: 'value', // value字段\r\n});\r\nconst scale = {\r\n  养护同比: {\r\n    type: 'linear',\r\n    min: 0,\r\n    max: 0.02,\r\n  },\r\n};\r\n\r\nlet chartIns = null;\r\n\r\nconst getG2Instance = (chart) => {\r\n  chartIns = chart;\r\n};\r\n\r\nclass TrafficLine extends React.Component {\r\n  render() {\r\n    const grid = {\r\n       \r\n        lineStyle: {\r\n          stroke: 'rgb(67,75,94)', // 网格线的颜色\r\n          lineWidth: 1, // 网格线的宽度复制代码\r\n          lineDash: [0, 0]\r\n        }, // 网格线的样式配置，原有属性为 line\r\n      }\r\n    return (<Chart height={230}  forceFit data={dv} scale={scale}  padding={[50, 'auto', 20, 'auto']} onGetG2Instance={getG2Instance}>\r\n      <Legend\r\n        custom\r\n        position=\"top\" offsetY={-2}\r\n        items={[\r\n          { value: '乡镇公路养护', marker: { symbol: 'square', fill: 'rgb(0,191,165)', radius: 5 } },\r\n          { value: '公路通车', marker: { symbol: 'square', fill: 'rgb(255,97,6)', radius: 5 } },\r\n          // { value: '养护同比', marker: { symbol: 'hyphen', stroke: '#fad248', radius: 5, lineWidth: 3 } },\r\n        ]}\r\n        textStyle={{\r\n            fill: 'white', // 文本的颜色\r\n          }}\r\n      />\r\n      <Axis name=\"label\" \r\n       label={{ // 数值，设置坐标轴文本 label 距离坐标轴线的距离\r\n        rotate:0,\r\n        textStyle: {\r\n            fill: 'white',\r\n          }, // 坐标轴文本属性配置\r\n      }}\r\n      />\r\n      <Axis name=\"value\" position={'left'} grid={grid}\r\n       label={{ // 数值，设置坐标轴文本 label 距离坐标轴线的距离\r\n        textStyle: {\r\n            fill: 'white',\r\n          }, // 坐标轴文本属性配置\r\n      }}/>\r\n      <Axis name=\"养护同比\"   label={{ // 数值，设置坐标轴文本 label 距离坐标轴线的距离\r\n        textStyle: {\r\n            fill: 'white',\r\n          }, // 坐标轴文本属性配置\r\n      }}/>\r\n      <Tooltip \r\n       g2-tooltip={{\r\n        opacity: '0.9',\r\n      }}\r\n      />\r\n      <Geom \r\n        type=\"interval\"\r\n        position=\"label*value\"\r\n        color={['type', (value) => {\r\n          if (value === '乡镇公路养护') {\r\n            return 'rgba(0,191,165,0.8)';\r\n          }\r\n          if (value === '公路通车') {\r\n            return 'rgba(255,97,6,0.8)';\r\n          }\r\n        }]}\r\n        adjust={[{\r\n          type: 'dodge',\r\n          marginRatio: 1 /4,\r\n        }]}\r\n        tooltip={[\r\n          'type*value', (type, value) => {\r\n            return {\r\n              //自定义 tooltip 上显示的 title 显示内容等。\r\n              name:type,\r\n              value: `${value}(公里)`\r\n            };\r\n        }\r\n        ]}\r\n        style={['type*value', {\r\n          lineWidth:2,\r\n          stroke:(type, value)=>{\r\n            if (value === '乡镇公路养护') {\r\n              return 'rgba(0,191,165,0.2)';\r\n            }\r\n            if (value === '公路通车') {\r\n              return 'rgbargba(9,111,100,0.2)';\r\n            }\r\n            // return \"rgba(255,255,255,0.5)\";\r\n          },\r\n          shadowColor:'rgba(255,255,255,0.4)',\r\n          shadowBlur:10,\r\n          shadowOffsetX:0,\r\n          shadowOffsetY:-2,\r\n         }]}\r\n      />\r\n      {/* <Geom type=\"line\" \r\n      position=\"label*养护同比\" \r\n      color=\"#fad248\" size={3} \r\n      tooltip={[\r\n        'type*养护同比', (type,value) => {\r\n          return {\r\n            //自定义 tooltip 上显示的 title 显示内容等。\r\n            name:\"养护同比\",\r\n            value: `${parseInt(value*100)}%`\r\n          };\r\n      }\r\n      ]}\r\n      /> */}\r\n\r\n    </Chart>\r\n    );\r\n  }\r\n}\r\n\r\n// CDN END\r\nexport default TrafficLine;"]},"metadata":{},"sourceType":"module"}