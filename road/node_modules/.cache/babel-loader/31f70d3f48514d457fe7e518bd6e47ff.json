{"ast":null,"code":"import _classCallCheck from \"D:\\\\antdtest\\\\\\u5927\\u5C4F\\\\road\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\antdtest\\\\\\u5927\\u5C4F\\\\road\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\antdtest\\\\\\u5927\\u5C4F\\\\road\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\antdtest\\\\\\u5927\\u5C4F\\\\road\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"D:\\\\antdtest\\\\\\u5927\\u5C4F\\\\road\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"D:\\\\antdtest\\\\\\u5927\\u5C4F\\\\road\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\antdtest\\\\\\u5927\\u5C4F\\\\road\\\\src\\\\centerMap.js\";\nimport React, { Component } from 'react';\nimport './centerMap.css'; //引入echarts主模块\n\nimport echarts from 'echarts/lib/echarts'; //引入echarts地图\n\nimport 'echarts/lib/chart/map'; //引入echarts柱状图\n\nimport 'echarts/lib/chart/bar';\nimport 'echarts/lib/chart/lines';\nimport 'echarts/lib/chart/effectScatter'; // 引入提示框和标题组件（按需加载）\n\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/title';\nimport 'echarts/lib/component/toolbox';\nimport 'echarts/lib/component/legend';\nimport 'echarts/lib/component/legendScroll';\nimport 'echarts/lib/component/geo'; //引入地图json数据\n\nimport fujian_border from './geojson/fujian_border.json';\nimport fujian from 'echarts/map/json/province/fujian.json';\nimport Bottom from './mapBottom/bottom';\nimport { white } from 'ansi-colors'; //定义地理座标点\n\nvar geoCoordMap = {\n  '福州': [119.3, 26.08],\n  '宁德': [119.52, 26.65],\n  '南平': [118.11, 27.34],\n  '三明': [117.61, 26.23],\n  '龙岩': [117.01, 25.12],\n  '漳州': [117.35, 24.52],\n  '厦门': [118.1, 24.46],\n  '泉州': [118.58, 24.93],\n  '莆田': [119, 25.44] // const geoData = [\n  //     [{name:'福州'},{name:'宁德',value:95}],\n  //     [{name:'福州'},{name:'南平',value:90}],\n  //     [{name:'福州'},{name:'三明',value:80}],\n  //     [{name:'福州'},{name:'龙岩',value:70}],\n  //     [{name:'福州'},{name:'漳州',value:60}],\n  //     [{name:'福州'},{name:'厦门',value:50}],\n  //     [{name:'福州'},{name:'泉州',value:40}],\n  //     [{name:'福州'},{name:'莆田',value:30}],\n  // ]\n  //定义福州到各地市的数据\n\n};\nvar geoData = [{\n  fromName: '福州',\n  toName: '宁德',\n  value: 95\n}, {\n  fromName: '福州',\n  toName: '南平',\n  value: 90\n}, {\n  fromName: '福州',\n  toName: '三明',\n  value: 80\n}, {\n  fromName: '福州',\n  toName: '龙岩',\n  value: 70\n}, {\n  fromName: '福州',\n  toName: '漳州',\n  value: 60\n}, {\n  fromName: '福州',\n  toName: '厦门',\n  value: 50\n}, {\n  fromName: '福州',\n  toName: '泉州',\n  value: 40\n}, {\n  fromName: '福州',\n  toName: '莆田',\n  value: 30\n}];\n\nvar CenterMap =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CenterMap, _Component);\n\n  function CenterMap(props) {\n    var _this;\n\n    _classCallCheck(this, CenterMap);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CenterMap).call(this, props));\n    _this.convertData = _this.convertData.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(CenterMap, [{\n    key: \"convertData\",\n    value: function convertData(data) {\n      var res = [];\n\n      for (var i = 0; i < data.length; i++) {\n        var dataItem = data[i];\n        var fromCoord = geoCoordMap[dataItem.fromName];\n        var toCoord = geoCoordMap[dataItem.toName];\n\n        if (fromCoord && toCoord) {\n          res.push({\n            fromName: dataItem.fromName,\n            toName: dataItem.toName,\n            coords: [fromCoord, toCoord]\n          });\n        }\n      }\n\n      return res;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //地图散点部分所需数据\n      var scatterData = geoData.map(function (dataItem) {\n        return {\n          name: dataItem.toName,\n          value: geoCoordMap[dataItem.toName].concat([dataItem.value])\n        };\n      });\n      scatterData.push({\n        name: '福州',\n        value: [119.3, 26.08, 60],\n        label: {\n          normal: {\n            color: '#fff',\n            fontSize: 14\n          }\n        },\n        itemStyle: {\n          normal: {\n            // color:'yellow'\n            color: '#ffa022'\n          }\n        },\n        rippleEffect: {\n          brushType: 'fill'\n        }\n      }); // console.log(scatterData);\n      // 基于准备好的dom，初始化echarts实例\n\n      var centerMap = echarts.init(document.getElementById('centerMap')); //添加矢量数据\n\n      echarts.registerMap('fujian', fujian);\n      echarts.registerMap('fujian_border', fujian_border);\n      var option = {\n        // backgroundColor: '#404a59',\n        title: {\n          text: '事件派发+大数据',\n          subtext: '福建省路长大数据分析平台',\n          textStyle: {\n            color: '#fff'\n          },\n          left: '5%',\n          top: '2%'\n        },\n        geo: [{\n          map: 'fujian',\n          zoom: 1.1,\n          z: 2,\n          itemStyle: {\n            normal: {\n              areaColor: 'none',\n              borderColor: '#46bee9',\n              borderWidth: 0.5,\n              opacity: 0.5\n            },\n            emphasis: {\n              areaColor: 'none'\n            }\n          },\n          label: {\n            emphasis: {\n              show: false\n            }\n          }\n        }, {\n          map: 'fujian_border',\n          zoom: 1.1,\n          z: 3,\n          itemStyle: {\n            normal: {\n              areaColor: 'none',\n              borderColor: '#01FFFC',\n              borderWidth: 2,\n              shadowColor: 'rgba(255,255,255,1)',\n              shadowBlur: 10\n            },\n            emphasis: {\n              areaColor: 'none'\n            }\n          }\n        }],\n        series: [//白色荧光效果\n        {\n          name: '福州到各地市',\n          type: 'lines',\n          zlevel: 1,\n          effect: {\n            show: true,\n            period: 6,\n            trailLength: 0.7,\n            color: '#fff',\n            // color:'#ffa022',\n            symbolSize: 3\n          },\n          lineStyle: {\n            normal: {\n              // color: '#46bee9',\n              color: '#ffa022',\n              width: 0,\n              curveness: 0.2\n            }\n          },\n          data: this.convertData(geoData)\n        }, //有颜色的弧线\n        {\n          name: '福州到各地市',\n          type: 'lines',\n          zlevel: 2,\n          symbol: ['none', 'arrow'],\n          symbolSize: 10,\n          // effect: {\n          //     show: true,\n          //     period: 6,\n          //     trailLength: 0,\n          //     symbol: 'circle',\n          //     symbolSize: 3,\n          // },\n          lineStyle: {\n            normal: {\n              color: '#46bee9',\n              // color:'#ffa022',\n              width: 2,\n              opacity: 0.4,\n              curveness: 0.2\n            }\n          },\n          data: this.convertData(geoData)\n        }, //各地市圆圈大小表示数量多少\n        {\n          name: '福州到各地市',\n          type: 'effectScatter',\n          coordinateSystem: 'geo',\n          zlevel: 2,\n          rippleEffect: {\n            brushType: 'stroke'\n          },\n          label: {\n            normal: {\n              show: true,\n              position: 'left',\n              formatter: '{b}',\n              distance: 10,\n              color: '#fff'\n            }\n          },\n          symbolSize: function symbolSize(val) {\n            return val[2] / 8; //val[2]是value中的第三个值，是派发事件数量多少\n          },\n          itemStyle: {\n            normal: {\n              // color: '#46bee9'\n              color: '#ccffff'\n            }\n          },\n          data: scatterData\n        }]\n      }; // 使用刚指定的配置项和数据显示图表。\n\n      centerMap.setOption(option);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"grid\",\n        style: {\n          height: '100%',\n          position: 'relative'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"edge\",\n        style: {\n          top: '0',\n          left: '0',\n          borderStyle: 'solid none none solid'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"edge\",\n        style: {\n          top: '0',\n          right: '0',\n          borderStyle: 'solid solid none none'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"edge\",\n        style: {\n          bottom: '0',\n          right: '0',\n          borderStyle: 'none solid solid none'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"edge\",\n        style: {\n          bottom: '0',\n          left: '0',\n          borderStyle: 'none none solid solid'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"centerMap\",\n        style: {\n          height: '100%',\n          zIndex: '0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"bottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, React.createElement(Bottom, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return CenterMap;\n}(Component);\n\nexport default CenterMap;","map":{"version":3,"sources":["D:\\antdtest\\大屏\\road\\src\\centerMap.js"],"names":["React","Component","echarts","fujian_border","fujian","Bottom","white","geoCoordMap","geoData","fromName","toName","value","CenterMap","props","convertData","bind","data","res","i","length","dataItem","fromCoord","toCoord","push","coords","scatterData","map","name","concat","label","normal","color","fontSize","itemStyle","rippleEffect","brushType","centerMap","init","document","getElementById","registerMap","option","title","text","subtext","textStyle","left","top","geo","zoom","z","areaColor","borderColor","borderWidth","opacity","emphasis","show","shadowColor","shadowBlur","series","type","zlevel","effect","period","trailLength","symbolSize","lineStyle","width","curveness","symbol","coordinateSystem","position","formatter","distance","val","setOption","height","borderStyle","right","bottom","zIndex"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\r\nimport './centerMap.css'\r\n//引入echarts主模块\r\nimport echarts from 'echarts/lib/echarts';\r\n//引入echarts地图\r\nimport 'echarts/lib/chart/map';\r\n//引入echarts柱状图\r\nimport 'echarts/lib/chart/bar';\r\nimport 'echarts/lib/chart/lines';\r\nimport 'echarts/lib/chart/effectScatter';\r\n// 引入提示框和标题组件（按需加载）\r\nimport 'echarts/lib/component/tooltip';\r\nimport 'echarts/lib/component/title';\r\nimport 'echarts/lib/component/toolbox';\r\nimport 'echarts/lib/component/legend';\r\nimport 'echarts/lib/component/legendScroll';\r\nimport 'echarts/lib/component/geo';\r\n\r\n//引入地图json数据\r\nimport fujian_border from './geojson/fujian_border.json';\r\nimport fujian from 'echarts/map/json/province/fujian.json';\r\nimport Bottom from './mapBottom/bottom';\r\nimport { white } from 'ansi-colors';\r\n\r\n//定义地理座标点\r\nconst geoCoordMap = {\r\n    '福州':[119.3,26.08],\r\n    '宁德':[119.52,26.65],\r\n    '南平':[118.11,27.34],\r\n    '三明':[117.61,26.23],\r\n    '龙岩':[117.01,25.12],\r\n    '漳州':[117.35,24.52],\r\n    '厦门':[118.1,24.46],\r\n    '泉州':[118.58,24.93],\r\n    '莆田':[119,25.44]\r\n}\r\n\r\n// const geoData = [\r\n//     [{name:'福州'},{name:'宁德',value:95}],\r\n//     [{name:'福州'},{name:'南平',value:90}],\r\n//     [{name:'福州'},{name:'三明',value:80}],\r\n//     [{name:'福州'},{name:'龙岩',value:70}],\r\n//     [{name:'福州'},{name:'漳州',value:60}],\r\n//     [{name:'福州'},{name:'厦门',value:50}],\r\n//     [{name:'福州'},{name:'泉州',value:40}],\r\n//     [{name:'福州'},{name:'莆田',value:30}],\r\n// ]\r\n//定义福州到各地市的数据\r\nconst geoData = [\r\n        {fromName:'福州',toName:'宁德',value:95},\r\n        {fromName:'福州',toName:'南平',value:90},\r\n        {fromName:'福州',toName:'三明',value:80},\r\n        {fromName:'福州',toName:'龙岩',value:70},\r\n        {fromName:'福州',toName:'漳州',value:60},\r\n        {fromName:'福州',toName:'厦门',value:50},\r\n        {fromName:'福州',toName:'泉州',value:40},\r\n        {fromName:'福州',toName:'莆田',value:30},\r\n]\r\n\r\n\r\nclass CenterMap extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.convertData = this.convertData.bind(this);\r\n    }\r\n\r\n    convertData (data) {\r\n        var res = [];\r\n        for (var i = 0; i < data.length; i++) {\r\n            var dataItem = data[i];\r\n            var fromCoord = geoCoordMap[dataItem.fromName];\r\n            var toCoord = geoCoordMap[dataItem.toName];\r\n            if (fromCoord && toCoord) {\r\n                res.push({\r\n                    fromName: dataItem.fromName,\r\n                    toName: dataItem.toName,\r\n                    coords: [fromCoord, toCoord]\r\n                });\r\n            }\r\n        }\r\n        return res;\r\n    };\r\n    componentDidMount(){\r\n        //地图散点部分所需数据\r\n        var scatterData = geoData.map(function (dataItem) {\r\n            return {\r\n                name: dataItem.toName,\r\n                value: geoCoordMap[dataItem.toName].concat([dataItem.value])\r\n            };\r\n        });\r\n        scatterData.push({\r\n            name:'福州',\r\n            value:[119.3,26.08,60],\r\n            label:{\r\n                normal:{\r\n                    color:'#fff',\r\n                    fontSize:14\r\n                }\r\n            },\r\n            itemStyle:{\r\n                normal:{\r\n                    // color:'yellow'\r\n                    color:'#ffa022'\r\n                }\r\n            },\r\n            rippleEffect: {\r\n                brushType: 'fill'\r\n            },\r\n        })\r\n        // console.log(scatterData);\r\n\r\n        // 基于准备好的dom，初始化echarts实例\r\n        var centerMap = echarts.init(document.getElementById('centerMap'));\r\n        //添加矢量数据\r\n        echarts.registerMap('fujian', fujian);\r\n        echarts.registerMap('fujian_border',fujian_border);\r\n        var option = {\r\n            // backgroundColor: '#404a59',\r\n            title: {\r\n                text: '事件派发+大数据',\r\n                subtext:'福建省路长大数据分析平台',\r\n                textStyle : {\r\n                    color: '#fff'\r\n                },\r\n                left:'5%',\r\n                top:'2%'\r\n            },\r\n            geo:[\r\n                {\r\n                    map:'fujian',\r\n                    zoom:1.1,\r\n                    z:2,\r\n                    itemStyle: {\r\n                        normal: {\r\n                            areaColor: 'none',\r\n                            borderColor: '#46bee9',\r\n                            borderWidth:0.5,\r\n                            opacity:0.5\r\n                        },\r\n                        emphasis: {\r\n                            areaColor: 'none'\r\n                        }\r\n                    },\r\n                    label: {\r\n                        emphasis: {\r\n                            show: false\r\n                        }\r\n                    },\r\n                },\r\n                {\r\n                    map:'fujian_border',\r\n                    zoom:1.1,\r\n                    z:3,\r\n                    itemStyle: {\r\n                        normal: {\r\n                            areaColor: 'none',\r\n                            borderColor: '#01FFFC',\r\n                            borderWidth:2,\r\n                            shadowColor: 'rgba(255,255,255,1)',\r\n                            shadowBlur: 10\r\n                        },\r\n                        emphasis: {\r\n                            areaColor: 'none'\r\n                        }\r\n                    }\r\n                }\r\n\r\n            ],\r\n            series:[\r\n                //白色荧光效果\r\n                {\r\n                    name: '福州到各地市',\r\n                    type: 'lines',\r\n                    zlevel: 1,\r\n                    effect: {\r\n                        show: true,\r\n                        period: 6,\r\n                        trailLength: 0.7,\r\n                        color: '#fff',\r\n                        // color:'#ffa022',\r\n                        symbolSize: 3\r\n                    },\r\n                    lineStyle: {\r\n                        normal: {\r\n                            // color: '#46bee9',\r\n                            color:'#ffa022',\r\n                            width: 0,\r\n                            curveness: 0.2\r\n                        }\r\n                    },\r\n                    data: this.convertData(geoData)\r\n                },\r\n                //有颜色的弧线\r\n                {\r\n                    name: '福州到各地市',\r\n                    type: 'lines',\r\n                    zlevel: 2,\r\n                    symbol: ['none', 'arrow'],\r\n                    symbolSize: 10,\r\n                    // effect: {\r\n                    //     show: true,\r\n                    //     period: 6,\r\n                    //     trailLength: 0,\r\n                    //     symbol: 'circle',\r\n                    //     symbolSize: 3,\r\n                    // },\r\n                    lineStyle: {\r\n                        normal: {\r\n                            color: '#46bee9',\r\n                            // color:'#ffa022',\r\n                            width: 2,\r\n                            opacity: 0.4,\r\n                            curveness: 0.2\r\n                        }\r\n                    },\r\n                    data: this.convertData(geoData)\r\n                },\r\n                //各地市圆圈大小表示数量多少\r\n                {\r\n                    name: '福州到各地市',\r\n                    type: 'effectScatter',\r\n                    coordinateSystem: 'geo',\r\n                    zlevel: 2,\r\n                    rippleEffect: {\r\n                        brushType: 'stroke'\r\n                    },\r\n                    label: {\r\n                        normal: {\r\n                            show: true,\r\n                            position: 'left',\r\n                            formatter: '{b}',\r\n                            distance: 10,\r\n                            color:'#fff'\r\n                        }\r\n                    },\r\n                    symbolSize: function (val) {\r\n                        return val[2] / 8;//val[2]是value中的第三个值，是派发事件数量多少\r\n                    },\r\n                    itemStyle: {\r\n                        normal: {\r\n                            // color: '#46bee9'\r\n                            color:'#ccffff'\r\n                        }\r\n                    },\r\n                    data: scatterData\r\n                \r\n                }\r\n            ]\r\n        \r\n            \r\n        };\r\n\r\n        // 使用刚指定的配置项和数据显示图表。\r\n        centerMap.setOption(option);\r\n        \r\n\r\n        \r\n    }\r\n    render(){\r\n        return(\r\n            <div id='grid'  style={{height:'100%',position:'relative'}}>\r\n                <div id='edge' style={{top:'0',left:'0',borderStyle:'solid none none solid'}}></div>\r\n                <div id='edge' style={{top:'0',right:'0',borderStyle:'solid solid none none'}}></div>\r\n                <div id='edge' style={{bottom:'0',right:'0',borderStyle:'none solid solid none'}}></div>\r\n                <div id='edge' style={{bottom:'0',left:'0',borderStyle:'none none solid solid'}}></div>\r\n                <div id='centerMap' style={{height:'100%',zIndex:'0'}}></div>\r\n                <div id='bottom'><Bottom /></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CenterMap;"]},"metadata":{},"sourceType":"module"}