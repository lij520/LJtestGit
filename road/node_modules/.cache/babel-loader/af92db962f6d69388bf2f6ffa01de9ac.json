{"ast":null,"code":"import _defineProperty from \"D:\\\\antdtest\\\\\\u5927\\u5C4F\\\\road\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\antdtest\\\\\\u5927\\u5C4F\\\\road\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\antdtest\\\\\\u5927\\u5C4F\\\\road\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\antdtest\\\\\\u5927\\u5C4F\\\\road\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\antdtest\\\\\\u5927\\u5C4F\\\\road\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\antdtest\\\\\\u5927\\u5C4F\\\\road\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\antdtest\\\\\\u5927\\u5C4F\\\\road\\\\src\\\\trafficMachine.js\";\nimport React from 'react';\nimport { Chart, Geom, Axis, Tooltip, Legend } from 'bizcharts';\n\nvar TrafficMachine =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TrafficMachine, _React$Component);\n\n  function TrafficMachine() {\n    _classCallCheck(this, TrafficMachine);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TrafficMachine).apply(this, arguments));\n  }\n\n  _createClass(TrafficMachine, [{\n    key: \"render\",\n    value: function render() {\n      var _React$createElement;\n\n      var data = [{\n        car: '汽车数',\n        year: '2010',\n        carvalue: 1996529\n      }, {\n        car: '汽车数',\n        year: '2011',\n        carvalue: 2422264\n      }, {\n        car: '汽车数',\n        year: '2012',\n        carvalue: 2861244\n      }, {\n        car: '汽车数',\n        year: '2013',\n        carvalue: 3349445\n      }, {\n        car: '汽车数',\n        year: '2014',\n        carvalue: 3884930\n      }, {\n        car: '汽车数',\n        year: '2015',\n        carvalue: 4368030\n      }, {\n        car: '汽车数',\n        year: '2016',\n        carvalue: 4950939\n      }, {\n        car: '汽车数',\n        year: '2017',\n        carvalue: 5582343\n      }, {\n        machine: '客运量',\n        year: '2010',\n        value: 70714\n      }, {\n        machine: '客运量',\n        year: '2011',\n        value: 73259\n      }, {\n        machine: '客运量',\n        year: '2012',\n        value: 75044\n      }, {\n        machine: '客运量',\n        year: '2013',\n        value: 46895\n      }, {\n        machine: '客运量',\n        year: '2014',\n        value: 48580\n      }, {\n        machine: '客运量',\n        year: '2015',\n        value: 40394\n      }, {\n        machine: '客运量',\n        year: '2016',\n        value: 39137\n      }, {\n        machine: '客运量',\n        year: '2017',\n        value: 37585\n      }, {\n        machine: '货运量',\n        year: '2010',\n        value: 45575\n      }, {\n        machine: '货运量',\n        year: '2011',\n        value: 52558\n      }, {\n        machine: '货运量',\n        year: '2012',\n        value: 59431\n      }, {\n        machine: '货运量',\n        year: '2013',\n        value: 69876\n      }, {\n        machine: '货运量',\n        year: '2014',\n        value: 82573\n      }, {\n        machine: '货运量',\n        year: '2015',\n        value: 79802\n      }, {\n        machine: '货运量',\n        year: '2016',\n        value: 85770\n      }, {\n        machine: '货运量',\n        year: '2017',\n        value: 95599\n      }];\n      var cols = {\n        year: {\n          type: 'linear',\n          tickInterval: 1\n        }\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(Chart, (_React$createElement = {\n        height: 290,\n        data: data,\n        scale: cols,\n        forceFit: true,\n        padding: [50, 'auto', 20, 'auto']\n      }, _defineProperty(_React$createElement, \"scale\", {\n        'value': {\n          formatter: function formatter(text) {\n            return \"\".concat(text / 10000);\n          } // 格式化文本内容，会影响到轴的label格式\n\n        },\n        'carvalue': {\n          formatter: function formatter(text) {\n            return \"\".concat(text / 10000);\n          } // 格式化文本内容，会影响到轴的label格式\n\n        }\n      }), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement), React.createElement(Axis, {\n        name: \"year\",\n        label: {\n          // 数值，设置坐标轴文本 label 距离坐标轴线的距离\n          rotate: 0,\n          formatter: function formatter(text, item, index) {\n            if (index % 2 == 0) {\n              return text;\n            }\n          },\n          textStyle: {\n            fill: 'white'\n          } // 坐标轴文本属性配置\n\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }), React.createElement(Axis, {\n        name: \"carvalue\",\n        label: {\n          // 数值，设置坐标轴文本 label 距离坐标轴线的距离\n          textStyle: {\n            fill: 'white'\n          } // 坐标轴文本属性配置\n\n        } // visible={false}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }), React.createElement(Axis, {\n        name: \"value\",\n        position: 'left',\n        label: {\n          // 数值，设置坐标轴文本 label 距离坐标轴线的距离\n          textStyle: {\n            fill: 'white'\n          } // 坐标轴文本属性配置\n\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }), React.createElement(Legend, {\n        position: \"top\",\n        offsetY: -5,\n        custom: true,\n        items: [{\n          value: '汽车数',\n          marker: {\n            symbol: 'square',\n            fill: 'rgb(244,67,54)',\n            radius: 5\n          }\n        }, {\n          value: '客运量',\n          marker: {\n            symbol: 'square',\n            fill: 'rgb(250,210,72)',\n            radius: 5\n          }\n        }, {\n          value: '货运量',\n          marker: {\n            symbol: 'square',\n            fill: 'rgb(0, 268,0)',\n            radius: 5\n          }\n        }],\n        textStyle: {\n          fill: 'white' // 文本的颜色\n\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }), React.createElement(Tooltip, {\n        \"g2-tooltip\": {\n          opacity: '0.9'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }), React.createElement(Geom, {\n        type: \"areaStack\",\n        position: \"year*value\",\n        color: ['machine', ['l (90) 0:rgba(250,210,72, 1) 1:rgba(250,210,72, 0.1)', 'l (90) 0:rgba(0, 268, 0, 1) 1:rgba(0, 268, 0, 0.1)']],\n        tooltip: ['machine*value', function (machine, value) {\n          return {\n            //自定义 tooltip 上显示的 title 显示内容等。\n            name: machine,\n            value: value\n          };\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }), React.createElement(Geom, {\n        type: \"areaStack\",\n        position: \"year*carvalue\",\n        color: ['car', ['l (90) 0:rgba(244,67,54) 1:rgba(244,67,54, 0.1)']],\n        tooltip: ['car*carvalue', function (car, carvalue) {\n          return {\n            //自定义 tooltip 上显示的 title 显示内容等。\n            name: car,\n            value: carvalue\n          };\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }), React.createElement(Geom, {\n        type: \"lineStack\",\n        shape: \"smooth\",\n        position: \"year*value\",\n        size: 2,\n        color: ['machine', ['rgba(250,210,72,1)', 'rgba(0, 268, 0,1)']],\n        tooltip: \"null\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }), React.createElement(Geom, {\n        type: \"lineStack\",\n        shape: \"smooth\",\n        position: \"year*carvalue\",\n        size: 2,\n        color: ['car', ['rgba(244,67,54, 1)']],\n        tooltip: \"null\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return TrafficMachine;\n}(React.Component);\n\nexport default TrafficMachine;","map":{"version":3,"sources":["D:\\antdtest\\大屏\\road\\src\\trafficMachine.js"],"names":["React","Chart","Geom","Axis","Tooltip","Legend","TrafficMachine","data","car","year","carvalue","machine","value","cols","type","tickInterval","formatter","text","rotate","item","index","textStyle","fill","marker","symbol","radius","opacity","name","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  Chart,\r\n  Geom,\r\n  Axis,\r\n  Tooltip,\r\n  Legend,\r\n} from 'bizcharts';\r\n\r\nclass TrafficMachine extends React.Component {\r\n  render() {\r\n    const data = [\r\n      {\r\n        car: '汽车数',\r\n        year: '2010',\r\n        carvalue: 1996529,\r\n      },\r\n      {\r\n        car: '汽车数',\r\n        year: '2011',\r\n        carvalue: 2422264,\r\n      },\r\n      {\r\n        car: '汽车数',\r\n        year: '2012',\r\n        carvalue: 2861244,\r\n      },\r\n      {\r\n        car: '汽车数',\r\n        year: '2013',\r\n        carvalue: 3349445,\r\n      },\r\n      {\r\n        car: '汽车数',\r\n        year: '2014',\r\n        carvalue: 3884930,\r\n      },\r\n      {\r\n        car: '汽车数',\r\n        year: '2015',\r\n        carvalue: 4368030,\r\n      },\r\n      {\r\n        car: '汽车数',\r\n        year: '2016',\r\n        carvalue: 4950939,\r\n      },\r\n      {\r\n        car: '汽车数',\r\n        year: '2017',\r\n        carvalue:5582343,\r\n      },\r\n      {\r\n        machine: '客运量',\r\n        year: '2010',\r\n        value:70714,\r\n      },\r\n      {\r\n        machine: '客运量',\r\n        year: '2011',\r\n        value:73259,\r\n      },\r\n      {\r\n        machine: '客运量',\r\n        year: '2012',\r\n        value:75044,\r\n      },\r\n      {\r\n        machine: '客运量',\r\n        year: '2013',\r\n        value:46895,\r\n      },\r\n      {\r\n        machine: '客运量',\r\n        year: '2014',\r\n        value:48580,\r\n      },\r\n      {\r\n        machine: '客运量',\r\n        year: '2015',\r\n        value:40394,\r\n      },\r\n      {\r\n        machine: '客运量',\r\n        year: '2016',\r\n        value:39137,\r\n      },\r\n      {\r\n        machine: '客运量',\r\n        year: '2017',\r\n        value: 37585,\r\n      },\r\n      {\r\n        machine: '货运量',\r\n        year: '2010',\r\n        value:45575,\r\n      },\r\n      {\r\n        machine: '货运量',\r\n        year: '2011',\r\n        value:52558,\r\n      },\r\n      {\r\n        machine: '货运量',\r\n        year: '2012',\r\n        value:59431,\r\n      },\r\n      {\r\n        machine: '货运量',\r\n        year: '2013',\r\n        value:69876,\r\n      },\r\n      {\r\n        machine: '货运量',\r\n        year: '2014',\r\n        value:82573,\r\n      },\r\n      {\r\n        machine: '货运量',\r\n        year: '2015',\r\n        value:79802,\r\n      },\r\n      {\r\n        machine: '货运量',\r\n        year: '2016',\r\n        value:85770,\r\n      },\r\n      {\r\n        machine: '货运量',\r\n        year: '2017',\r\n        value:95599,\r\n      },\r\n     \r\n    ];\r\n    const cols = {\r\n      year: {\r\n        type: 'linear',\r\n        tickInterval: 1,\r\n      },\r\n    };\r\n    return (\r\n      <div>\r\n        <Chart height={290} data={data} scale={cols} forceFit padding={[50, 'auto', 20, 'auto']} scale={{\r\n          'value': {\r\n            formatter: (text) => {return `${text/10000}`}, // 格式化文本内容，会影响到轴的label格式\r\n          },\r\n          'carvalue': {\r\n            formatter: (text) => {return `${text/10000}`}, // 格式化文本内容，会影响到轴的label格式\r\n          }\r\n        }}>\r\n          <Axis name=\"year\" \r\n          label={{ // 数值，设置坐标轴文本 label 距离坐标轴线的距离\r\n            rotate:0,\r\n            formatter(text, item, index) {\r\n                if(index%2==0){\r\n                  return text\r\n                }\r\n              },\r\n            textStyle: {\r\n                fill: 'white',\r\n              }, // 坐标轴文本属性配置\r\n          }}\r\n          />\r\n           <Axis name=\"carvalue\" \r\n            label={{ // 数值，设置坐标轴文本 label 距离坐标轴线的距离\r\n              textStyle: {\r\n                  fill: 'white',\r\n                }, // 坐标轴文本属性配置\r\n            }}\r\n            // visible={false}\r\n          />\r\n          <Axis name=\"value\" position={'left'}\r\n          label={{ // 数值，设置坐标轴文本 label 距离坐标轴线的距离\r\n            textStyle: {\r\n                fill: 'white',\r\n              }, // 坐标轴文本属性配置\r\n          }}\r\n          />\r\n          <Legend  position=\"top\" offsetY={-5} custom\r\n          items={[\r\n            { value: '汽车数', marker: { symbol: 'square', fill:'rgb(244,67,54)', radius: 5 } },\r\n            { value: '客运量', marker: { symbol: 'square', fill:'rgb(250,210,72)', radius: 5 } },\r\n            { value: '货运量', marker: { symbol: 'square', fill:'rgb(0, 268,0)', radius: 5 } },\r\n          ]}\r\n          textStyle={{\r\n              fill: 'white', // 文本的颜色\r\n            }}\r\n          />\r\n          <Tooltip \r\n           g2-tooltip={{\r\n            opacity: '0.9',\r\n          }}\r\n          />\r\n          <Geom type=\"areaStack\" position=\"year*value\" color={['machine', ['l (90) 0:rgba(250,210,72, 1) 1:rgba(250,210,72, 0.1)', 'l (90) 0:rgba(0, 268, 0, 1) 1:rgba(0, 268, 0, 0.1)']]} \r\n           tooltip={[\r\n            'machine*value', (machine,value) => {\r\n              return {\r\n                //自定义 tooltip 上显示的 title 显示内容等。\r\n                name:machine,\r\n                value:value,\r\n              };\r\n          }\r\n          ]}/>\r\n           <Geom type=\"areaStack\" position=\"year*carvalue\" color={['car', ['l (90) 0:rgba(244,67,54) 1:rgba(244,67,54, 0.1)']]} \r\n           tooltip={[\r\n            'car*carvalue', (car,carvalue) => {\r\n              return {\r\n                //自定义 tooltip 上显示的 title 显示内容等。\r\n                name:car,\r\n                value: carvalue,\r\n              };\r\n          }\r\n          ]}/>\r\n          <Geom type=\"lineStack\"    shape={\"smooth\"} position=\"year*value\" size={2} color={['machine', ['rgba(250,210,72,1)', 'rgba(0, 268, 0,1)']]} tooltip='null'/>\r\n          <Geom type=\"lineStack\"    shape={\"smooth\"} position=\"year*carvalue\" size={2} color={['car', ['rgba(244,67,54, 1)']]} tooltip='null'/>\r\n        </Chart>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TrafficMachine;"]},"metadata":{},"sourceType":"module"}